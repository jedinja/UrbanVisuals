package UrbanVisuals.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myCurrencyLabelInput__BehaviorDescriptor = new CurrencyLabelInput__BehaviorDescriptor();
  private final BHDescriptor myTextareaLabelInput__BehaviorDescriptor = new TextareaLabelInput__BehaviorDescriptor();
  private final BHDescriptor myDateLabelInput__BehaviorDescriptor = new DateLabelInput__BehaviorDescriptor();
  private final BHDescriptor myLabelInput__BehaviorDescriptor = new LabelInput__BehaviorDescriptor();
  private final BHDescriptor myBaseLabelInput__BehaviorDescriptor = new BaseLabelInput__BehaviorDescriptor();
  private final BHDescriptor myNumberLabelInput__BehaviorDescriptor = new NumberLabelInput__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myBaseLabelInput__BehaviorDescriptor;
      case 1:
        return myCurrencyLabelInput__BehaviorDescriptor;
      case 2:
        return myDateLabelInput__BehaviorDescriptor;
      case 3:
        return myLabelInput__BehaviorDescriptor;
      case 4:
        return myNumberLabelInput__BehaviorDescriptor;
      case 5:
        return myTextareaLabelInput__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x84d162bfa6bd428dL, 0x9b7556edca8f6b21L, 0x6be5cd2096f55128L), MetaIdFactory.conceptId(0x84d162bfa6bd428dL, 0x9b7556edca8f6b21L, 0x24733d33cfdea2e2L), MetaIdFactory.conceptId(0x84d162bfa6bd428dL, 0x9b7556edca8f6b21L, 0x24733d33cfe04134L), MetaIdFactory.conceptId(0x84d162bfa6bd428dL, 0x9b7556edca8f6b21L, 0x24733d33cfe80ae4L), MetaIdFactory.conceptId(0x84d162bfa6bd428dL, 0x9b7556edca8f6b21L, 0x772e8ab13d5d4ee0L), MetaIdFactory.conceptId(0x84d162bfa6bd428dL, 0x9b7556edca8f6b21L, 0x24733d33cfdf83c6L)).seal();
}
